#!/usr/bin/env ruby
require 'pathname'

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../',  __FILE__)

class SystemCallAggregator
  def initialize
    @results = []
  end

  def run(cmd)
    @results << system(cmd)
  end

  def errors?
    @results.any? { |result| result.nil? || result == false }
  end
end

sca = SystemCallAggregator.new

Dir.chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  puts
  puts '== Installing dependencies =='
  sca.run 'gem install bundler --conservative'
  sca.run 'bundle check || bundle install'

  puts
  puts '== Configuriguring environment variables =='
  sca.run 'WITHOUT_ENV=true bin/rake generate_dotenv'

  puts
  puts '== Preparing database =='
  sca.run 'bin/rake dotenv db:setup'

  puts
  puts '== Removing old logs and tempfiles =='
  sca.run 'rm -f log/*'
  sca.run 'rm -rf tmp/cache/*'

  puts
  puts '== Environment variables =='
  sca.run 'bin/bundle exec dotenv envied check'

  puts
  if sca.errors?
    puts '=' * 80
    puts 'A `.env` file for you in the root of your application directory.'
    puts
    puts <<-MSG.gsub(/^\s+/, '')
      You can check Envfile to determine what variables are required to run the
      application, update your .env file accordingly and then try re-running
      `bin/setup` again once you're done.
    MSG
    puts '=' * 80

  else
    puts '== Setup complete! =='
  end
end
